apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ru.olegivo.afs"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        all {
            def apiAddress = "https://mobifitness.ru/"
            String debugMode

            switch (name) {
                case "debug":
                    debugMode = 'true'
                    break
                case "release":
                    debugMode = 'false'
                    break
            }

            buildConfigField "String", "API_URL", "\"${apiAddress}\""
            buildConfigField "String", "DB_NAME", "\"afs\""
            buildConfigField "Boolean", "DEBUG_MODE", debugMode
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

android.sourceSets {
    test {
        java.srcDirs += "$projectDir/src/testShared/java"
    }

    androidTest {
        java.srcDirs += "$projectDir/src/testShared/java"
    }
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'androidx.arch.core'
                && !details.requested.name.contains('core-runtime')) {
            details.useVersion "2.0.1"
        }
    }
}

dependencies {
    def assertJVersion = '3.12.2'
    def daggerVersion = "2.25.2"
    def daggerAssistVersion = "0.3.3"
    def javaxInjectVersion = '1'
    def jUnitVersion = '4.12'
    def mockitoVersion = '2.28.2'
    def moshiVersion = "1.8.0"
    def mockitoKotlinVersion = '2.1.0'
    def recyclerViewVersion = "1.1.0"
    def retrofitVersion = "2.4.0"
    def roomVersion = "2.2.2"
    def workVersion = "2.2.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "androidx.work:work-runtime:$workVersion"
    implementation "androidx.work:work-runtime-ktx:$workVersion"
    implementation "androidx.work:work-rxjava2:$workVersion"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$daggerAssistVersion"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$daggerAssistVersion"

    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation 'com.jakewharton.timber:timber:4.7.0'

    implementation "com.squareup.moshi:moshi:${moshiVersion}"
    implementation "com.squareup.moshi:moshi-adapters:${moshiVersion}"
    implementation "com.squareup.moshi:moshi-kotlin:${moshiVersion}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${moshiVersion}"
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    implementation "javax.inject:javax.inject:${javaxInjectVersion}"

    implementation 'io.reactivex.rxjava2:rxjava:2.2.15'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'net.danlew:android.joda:2.10.3'

    implementation 'ru.terrakok.cicerone:cicerone:5.0.0'

    testImplementation "junit:junit:${jUnitVersion}"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}"

    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}"

    androidTestImplementation "org.assertj:assertj-core:${assertJVersion}"
}
