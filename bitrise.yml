---
format_version: '8'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: android
trigger_map:
  - push_branch: master
    workflow: empty
  - push_branch: '*'
    workflow: primary
workflows:
  deploy:
    description: >
      ## How to get a signed APK


      This workflow contains the **Sign APK** step. To sign your APK all you
      have to do is to:


      1. Click on **Code Signing** tab

      1. Find the **ANDROID KEYSTORE FILE** section

      1. Click or drop your file on the upload file field

      1. Fill the displayed 3 input fields:
       1. **Keystore password**
       1. **Keystore alias**
       1. **Private key password**
      1. Click on **[Save metadata]** button


      That's it! From now on, **Sign APK** step will receive your uploaded
      files.


      ## To run this workflow


      If you want to run this workflow manually:


      1. Open the app's build list page

      2. Click on **[Start/Schedule a Build]** button

      3. Select **deploy** in **Workflow** dropdown input

      4. Click **[Start Build]** button


      Or if you need this workflow to be started by a GIT event:


      1. Click on **Triggers** tab

      2. Setup your desired event (push/tag/pull) and select **deploy** workflow

      3. Click on **[Done]** and then **[Save]** buttons


      The next change in your repository that matches any of your trigger map
      event will start **deploy** workflow.
    steps:
      - activate-ssh-key@4:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4: { }
      - cache-pull@2: { }
      - install-missing-android-tools@2:
          inputs:
            - gradlew_path: $GRADLEW_PATH
      - file-downloader@1:
          title: Download google-services.json
          inputs:
            - destination: $PROJECT_LOCATION/$MODULE/src/debug/google-services.json
            - source: $BITRISEIO_GOOGLE_SERVICES_JSON_DEBUG_URL
      - file-downloader@1:
          title: Download signing.properties
          inputs:
            - destination: $PROJECT_LOCATION/$MODULE/signing.properties
            - source: $BITRISEIO_SIGNING_PROPERTIES_URL
      - file-downloader@1:
          title: Download debug keystore
          inputs:
            - destination: $PROJECT_LOCATION/$MODULE/AFS.debug.jks
            - source: $BITRISEIO_SIGNING_KEYSTORE_DEBUG_URL
      - file-downloader@1:
          title: Download firebase-app-distribution.json
          inputs:
            - destination: $PROJECT_LOCATION/$MODULE/firebase-app-distribution.json
            - source: $BITRISEIO_FIREBASE_APP_DISTRIBUTION_JSON_URL
      - change-android-versioncode-and-versionname@1:
          inputs:
            - build_gradle_path: $PROJECT_LOCATION/$MODULE/build.gradle
      - gradle-runner@1:
          title: Assemble debug
          inputs:
            - gradle_task: assembleDebug
      - gradle-runner@1:
          title: Firebase App Distribution
          inputs:
            - gradle_task: appDistributionUploadDebug
      - deploy-to-bitrise-io@1: { }
  empty:
    description: Empty workflow for exclude branch from push trigger
  primary:
    steps:
      - activate-ssh-key@4:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@8: { }
      - script@1:
          inputs:
            - content: >-
                sudo update-alternatives --set javac
                /usr/lib/jvm/java-11-openjdk-amd64/bin/javac

                sudo update-alternatives --set java
                /usr/lib/jvm/java-11-openjdk-amd64/bin/java


                export JAVA_HOME='/usr/lib/jvm/java-11-openjdk-amd64'

                envman add --key JAVA_HOME --value
                '/usr/lib/jvm/java-11-openjdk-amd64'
          title: Setup Java 11
      - cache-pull@2: { }
      - gradle-runner@3:
          title: Static Analysis
          inputs:
            - gradle_task: staticAnalysis
      - deploy-to-bitrise-io@2:
          title: Upload KtLint results
          inputs:
            - zip_name: ktlint
            - deploy_path: $PROJECT_LOCATION/$MODULE/build/reports/ktlint
            - is_compress: 'true'
      - deploy-to-bitrise-io@2:
          title: Upload Detekt results
          inputs:
            - zip_name: detekt
            - deploy_path: $PROJECT_LOCATION/$MODULE/build/reports/detekt/detekt.html
      - install-missing-android-tools@3:
          inputs:
            - gradlew_path: $GRADLEW_PATH
      - file-downloader@1:
          title: Download google-services.json
          inputs:
            - destination: $PROJECT_LOCATION/$MODULE/src/debug/google-services.json
            - source: $BITRISEIO_GOOGLE_SERVICES_JSON_DEBUG_URL
      - file-downloader@1:
          title: Download signing.properties
          inputs:
            - destination: $PROJECT_LOCATION/$MODULE/signing.properties
            - source: $BITRISEIO_SIGNING_PROPERTIES_URL
      - file-downloader@1:
          title: Download debug keystore
          inputs:
            - destination: $PROJECT_LOCATION/$MODULE/AFS.debug.jks
            - source: $BITRISEIO_SIGNING_KEYSTORE_DEBUG_URL
      - gradle-runner@3:
          title: Android lint
          inputs:
            - gradle_task: lintDebug
      - android-unit-test@1:
          title: Unit tests
          inputs:
            - project_location: $PROJECT_LOCATION
            - module: $MODULE
            - variant: $VARIANT
      - gradle-runner@3:
          title: Unit tests coverage
          inputs:
            - gradle_task: testDebugUnitTestCoverageVerification
      - deploy-to-bitrise-io@2:
          title: Uload coverage results
          inputs:
            - zip_name: Coverage
            - deploy_path: >-
                $PROJECT_LOCATION/$MODULE/build/reports/jacoco/testDebugUnitTestCoverage
            - is_compress: 'true'
#      - gradle-runner@3:
#          title: Build android tests
#          inputs:
#            - app_file_exclude_filter: '*.apk'
#            - test_apk_file_exclude_filter: '*.apk'
#            - gradle_task: packageDebugAndroidTest
#      - cache-push@2: { }
#      - avd-manager@1:
#          inputs:
#            - api_level: '29'
#      - wait-for-android-emulator@1: { }
#      - gradle-runner@3:
#          title: Run android tests
#          inputs:
#            - app_file_exclude_filter: '*.apk'
#            - test_apk_file_exclude_filter: '*.apk'
#            - gradle_task: connectedDebugAndroidTest
#      - deploy-to-bitrise-io@2:
#          title: Upload android tests results
#          inputs:
#            - zip_name: Android tests
#            - deploy_path: >-
#                $PROJECT_LOCATION/$MODULE/build/reports/androidTests/connected/flavors/debugAndroidTest
#            - is_compress: 'true'
      - deploy-to-bitrise-io@2: { }
      - cache-push@2: { }
app:
  envs:
    - opts:
        is_expand: false
      PROJECT_LOCATION: .
    - opts:
        is_expand: false
      MODULE: app
    - opts:
        is_expand: false
      VARIANT: debug
    - opts:
        is_expand: false
      GRADLEW_PATH: ./gradlew
meta:
  bitrise.io:
    stack: linux-docker-android-22.04
    machine_type_id: standard
